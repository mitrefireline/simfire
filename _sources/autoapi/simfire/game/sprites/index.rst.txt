:py:mod:`simfire.game.sprites`
==============================

.. py:module:: simfire.game.sprites


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   simfire.game.sprites.Terrain
   simfire.game.sprites.Fire
   simfire.game.sprites.FireLine
   simfire.game.sprites.ScratchLine
   simfire.game.sprites.WetLine
   simfire.game.sprites.Agent




Attributes
~~~~~~~~~~

.. autoapisummary::

   simfire.game.sprites.log


.. py:data:: log
   

   

.. py:class:: Terrain(fuel_layer, topo_layer, screen_size, headless = False)

   Bases: :py:obj:`pygame.sprite.Sprite`

   Use a TopographyLayer and a FuelLayer to make terrain. This sprite is just the
   entire background that the fire appears on. This sprite changes the color of each
   terrain pixel based on its "dryness/flammability" if it is unburned, or based on
   whether the pixel is a fireline or burned.

   .. py:method:: update(*args, **kwargs)

      Change any burned squares to brown using fire_map, which
      contains pixel-wise values for tile burn status.
      The parent class update() expects just args and kwargs, so we

      :param a:
      :param fire_map: A 2-D numpy array containing enumerated values for unburned,
                       burning, and burned tile status for the game screen

      Returns: None



.. py:class:: Fire(pos, size, headless = False)

   Bases: :py:obj:`pygame.sprite.Sprite`

   This sprite represents a fire burning on one pixel of the terrain. Its
   image is generally kept very small to make rendering easier. All fire
   spreading is handled by the FireManager it is attached to.

   Initialize the class by recording the position and size of the sprite
   and creating a solid color texture.

   :param pos: The (x, y) pixel position of the sprite
   :param size: The pixel size of the sprite
   :param headless: Flag to run in a headless state. This will allow PyGame objects to
                    not be initialized.

   .. py:method:: update(*args, **kwargs)

      Currently unused.



.. py:class:: FireLine(pos, size, headless = False)

   Bases: :py:obj:`pygame.sprite.Sprite`

   This sprite represents a fireline on one pixel of the terrain. Its image is generally
   kept very small to make rendering easier. All fireline placement spreading is handled
   by the FireLineManager it is attached to.

   Initialize the class by recording the position and size of the sprite
   and creating a solid color texture.

   :param pos: The (x, y) pixel position of the sprite
   :param size: The pixel size of the sprite
   :param headless: Flag to run in a headless state. This will allow PyGame objects to
                    not be initialized.

   .. py:method:: update(*args, **kwargs)

      This doesn't require to be updated right now. May change in the future if we
      learn new things about the physics.



.. py:class:: ScratchLine(pos, size, headless = False)

   Bases: :py:obj:`pygame.sprite.Sprite`

   This sprite represents a scratch line on one pixel of the terrain. Its image is
   generally kept very small to make rendering easier. All scratch line placement
   spreading is handled by the ScratchLineManager it is attached to.

   Initialize the class by recording the position and size of the sprite
   and creating a solid color texture.

   .. py:method:: update(*args, **kwargs)

      This doesn't require to be updated right now. May change in the future if we
      learn new things about the physics.




.. py:class:: WetLine(pos, size, headless = False)

   Bases: :py:obj:`pygame.sprite.Sprite`

   This sprite represents a wet line on one pixel of the terrain. Its image is
   generally kept very small to make rendering easier. All wet line placement
   spreading is handled by the WaterLineManager it is attached to.

   Initialize the class by recording the position and size of the sprite
   and creating a color texture.

   .. py:method:: update(*args, **kwargs)

      This doesn't require to be updated right now. May change in the future if we
      learn new things about the physics.




.. py:class:: Agent(pos, size, headless = False)

   Bases: :py:obj:`pygame.sprite.Sprite`

   This sprite represents a fire burning on one pixel of the terrain. Its
   image is generally kept very small to make rendering easier. All fire
   spreading is handled by the FireManager it is attached to.

   Initialize the class by recording the position and size of the sprite
   and creating a solid color texture.

   :param pos: The (x, y) pixel position of the sprite
   :param size: The pixel size of the sprite
   :param headless: Flag to run in a headless state. This will allow PyGame objects to
                    not be initialized.

   .. py:method:: pos()
      :property:


   .. py:method:: update(*args, **kwargs)

      Currently unused.



